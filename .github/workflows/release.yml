---
name: Release

on:
  push:
    branches: # TODO: to remove
      - "main"
      - "ci"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  pull_request:
    branches:
      - "main"

env:
  IMAGE_NAME: "cdktf-bundle"
  IMAGE_PLATFORMS: "linux/amd64,linux/arm64"
  CDKTF_VERSION: "0.13.3"

jobs:

  build_test_publish:
    name: Build, test and publish
    #    needs:
    #      - pre-commit
    #      - static_analysis
    permissions:
      packages: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language:
          - python
          - go
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: ${{ env.IMAGE_PLATFORMS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_metadata
        name: Docker metadata
        uses: docker/metadata-action@v4.1.1
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.language }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

#      - name: Build and push Docker image
#        uses: docker/build-push-action@v3.2.0
#        with:
#          context: .
#          build-args: |
#            BASE=${{ matrix.language }}
#            CDKTF_VERSION=${{ env.CDKTF_VERSION }}
#          platforms: ${{ env.IMAGE_PLATFORMS }}
#          tags: ${{ steps.docker_metadata.outputs.tags }}
#          labels: ${{ steps.docker_metadata.outputs.labels }}
#
#          # The local registry does not support multi-platform images, so we can't use `load: true`.
#          # See https://github.com/docker/buildx/issues/59
#          # Instead we use `push: true` to push the image to a remote registry.
#          push: ${{ github.event_name != 'pull_request' }}
#
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@0.8.0
#        with:
#          image-ref: ${{ fromJSON(steps.docker_metadata.outputs.json)['tags'][0] }}  # Take the first tag.
#          format: "table"
#          exit-code: "1"
#          ignore-unfixed: true
#          vuln-type: "os,library"
#          security-checks: "vuln"
#          severity: "CRITICAL,HIGH"

      - name: Install test framework
        working-directory: ./test
        run: npm install

      - name: Test image
        working-directory: ./test/${{ matrix.language }}
        run: npx bats
        env:
          DOCKER_IMAGE2: ${{ fromJSON(steps.docker_metadata.outputs.json)['tags'][0] }}  # Take the first tag.
